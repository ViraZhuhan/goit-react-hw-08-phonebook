{"version":3,"file":"static/js/236.00c3c9e0.chunk.js","mappings":"4LAEaA,E,QAAOC,GAAAA,KAAH,6F,iNCaJC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KAGMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IA0BjC,OAXAC,EAAAA,EAAAA,YAAU,WACRH,IACEI,EAAAA,EAAAA,IAAM,sBAAuB,CAC3BC,MAAO,CACLC,aAAc,OACdC,WAAY,MACZC,MAAO,SAGd,GAAE,CAACR,KAGF,SAAC,IAAD,WACE,UAAC,IAAD,CAAMS,SA1BW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACflB,GACEmB,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,SAGrCL,EAAKQ,OACN,EAeiCC,aAAa,KAA3C,WACE,UAAC,IAAD,WAAW,YAET,SAAC,EAAAC,EAAD,CAAOC,KAAK,KAAKC,KAAK,OAAOT,KAAK,OAAOU,UAAQ,QAEnD,UAAC,IAAD,WAAW,SAET,SAAC,EAAAH,EAAD,CACEC,KAAK,KACLC,KAAK,QACLT,KAAK,QACLW,QAAQ,8CACRD,UAAQ,QAGZ,UAAC,IAAD,WAAW,YAET,UAAC,IAAD,CAAYF,KAAK,KAAjB,WACE,SAAC,EAAAD,EAAD,CACEK,GAAG,SACHH,KAAM1B,EAAO,OAAS,WACtBiB,KAAK,WACLU,UAAQ,KAEV,SAAC,IAAD,CAAmBG,MAAM,SAAzB,UACE,SAAC,IAAD,CAAQC,EAAE,UAAUN,KAAK,KAAKO,QAvDtB,kBAAM/B,GAASD,EAAf,EAuDR,SACGA,EAAO,OAAS,kBAKzB,SAAC,IAAD,CAAQ0B,KAAK,SAASO,YAAY,YAAYR,KAAK,KAAnD,SAAwD,iBAM/D,ECnFc,SAASS,IACtB,OACU,SAACtC,EAAD,GAEX,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Form = styled.form`\npadding: 20px 16px;\nborder: 2px solid #006AFF;\nborder-radius: 5px;\n`","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport toast from 'react-hot-toast';\nimport {\n  Input,\n  Button,\n  InputGroup,\n  InputRightElement,\n  FormLabel,\n  Center,\n} from '@chakra-ui/react';\nimport { register } from 'redux/auth/operationsAuth';\nimport { selectIsLoginError } from 'redux/auth/selectorsAuth';\nimport { Form } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [show, setShow] = React.useState(false);\n  const handleClick = () => setShow(!show);\n\n  const isLoginError = useSelector(selectIsLoginError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  useEffect(() => {\n    isLoginError &&\n      toast(`User already exists`, {\n        style: {\n          borderRadius: '10px',\n          background: 'red',\n          color: '#fff',\n        },\n      });\n  }, [isLoginError]);\n\n  return (\n    <Center>\n      <Form onSubmit={handleSubmit} autoComplete=\"on\">\n        <FormLabel>\n          Username\n          <Input size=\"md\" type=\"text\" name=\"name\" required />\n        </FormLabel>\n        <FormLabel>\n          Email\n          <Input\n            size=\"md\"\n            type=\"email\"\n            name=\"email\"\n            pattern=\"/^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/\"\n            required\n          />\n        </FormLabel>\n        <FormLabel>\n          Password\n          <InputGroup size=\"md\">\n            <Input\n              pr=\"4.5rem\"\n              type={show ? 'text' : 'password'}\n              name=\"password\"\n              required\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n        </FormLabel>\n        <Button type=\"submit\" colorScheme=\"messenger\" size=\"md\">\n          Register\n        </Button>\n      </Form>\n    </Center>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n            <RegisterForm />\n  );\n}\n"],"names":["Form","styled","RegisterForm","dispatch","useDispatch","React","show","setShow","isLoginError","useSelector","selectIsLoginError","useEffect","toast","style","borderRadius","background","color","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","reset","autoComplete","I","size","type","required","pattern","pr","width","h","onClick","colorScheme","Register"],"sourceRoot":""}